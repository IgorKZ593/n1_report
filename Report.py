import xlwings as xw
import os

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ, –≥–¥–µ —Ö—Ä–∞–Ω—è—Ç—Å—è —Ñ–∞–π–ª—ã
folder_path = r"F:\Python Projets\Report_N1\Data"

# –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤—ã–π —Ñ–∞–π–ª, –∏–º—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 'src_' –∏ –æ–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ '.xlsx'
file_name = None
for f in os.listdir(folder_path):
    if f.startswith('src_') and f.endswith('.xlsx'):
        file_name = f
        break

if not file_name:
    raise FileNotFoundError("–§–∞–π–ª, –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å 'src_' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ.")

# –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –ø—Ä–∞–≤–∏–ª–∞–º
# –£–±–∏—Ä–∞–µ–º 'src_' –∏ –¥–æ–±–∞–≤–ª—è–µ–º '–æ—Ç—á–µ—Ç_'
base_name = file_name.replace('src_', '', 1)
new_file_name = f"–æ—Ç—á–µ—Ç_{base_name}"
new_file_path = os.path.join(folder_path, new_file_name)
#+++++++++++++++++++++++++++++
print('test_123')
#++++++++++++++++++++++++++++++
# –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª –∏ —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª –Ω–∞ –µ–≥–æ –æ—Å–Ω–æ–≤–µ
with xw.App(visible=False) as app:
    wb_src = app.books.open(os.path.join(folder_path, file_name))

    # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –∫–Ω–∏–≥—É (–æ—Ç—á–µ—Ç)
    wb_new = app.books.add()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ª–∏—Å—Ç '–æ–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ'. –ï—Å–ª–∏ –¥–∞ ‚Äì —É–¥–∞–ª—è–µ–º
    if '–æ–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ' in [s.name for s in wb_new.sheets]:
        wb_new.sheets['–æ–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ'].delete()

    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ª–∏—Å—Ç —Å –∏–º–µ–Ω–µ–º '–æ–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ'
    sht = wb_new.sheets.add('–æ–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ', before=wb_new.sheets[0])

    # –û–∫—Ä–∞—à–∏–≤–∞–µ–º —è—Ä–ª—ã–∫ –ª–∏—Å—Ç–∞ –≤ —Å–≤–µ—Ç–ª–æ-—Å–∏–Ω–∏–π (RGB = 173, 216, 230)
    sht.api.Tab.Color = 16764057  # —Å–∏—Å—Ç–µ–º–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ light blue –≤ Excel

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—É—é –∫–Ω–∏–≥—É –ø–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É –ø—É—Ç–∏
    wb_new.save(new_file_path)
    wb_new.close()
    wb_src.close()

# –í—ã–≤–æ–¥–∏–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å
print(f"‚úÖ –ù–æ–≤—ã–π —Ñ–∞–π–ª '{new_file_name}' —Å–æ–∑–¥–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –ø–æ –ø—É—Ç–∏: {new_file_path}")

# === –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ª–∏—Å—Ç–∞ "—Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã" ===

# –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ä–∞–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏
with xw.App(visible=False) as app:
    wb = app.books.open(new_file_path)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ª–∏—Å—Ç–∞ '—Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã' –∏ —É–¥–∞–ª—è–µ–º, –µ—Å–ª–∏ –µ—Å—Ç—å
    if '—Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã' in [s.name for s in wb.sheets]:
        wb.sheets['—Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã'].delete()

    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ª–∏—Å—Ç '—Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã'
    sht = wb.sheets.add('—Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã')

    # –û–∫—Ä–∞—à–∏–≤–∞–µ–º —è—Ä–ª—ã–∫ –≤ —Å–≤–µ—Ç–ª–æ-–∫–æ—Ä–∏—á–Ω–µ–≤—ã–π
    # –ü—Ä–∏–º–µ—Ä RGB (210, 180, 140) = tan, Excel BGR Decimal = 9234160
    sht.api.Tab.Color = 9234160

    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–µ—Ä–µ—á–µ–Ω—å –≤—Å–µ—Ö –ª–∏—Å—Ç–æ–≤
    sheets_list = [s.name for s in wb.sheets]

    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–æ–Ω—Å–æ–ª—å
    print("\nüìä –í –∫–Ω–∏–≥–µ:")
    print(f"–ü–æ–ª–Ω–æ–µ –∏–º—è: {wb.name}")
    print(f"–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É: {new_file_path}")
    print(f"–°–æ–∑–¥–∞–Ω—ã –ª–∏—Å—Ç—ã: {', '.join(sheets_list)}")
    print("‚úÖ –ö–Ω–∏–≥–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –∫–Ω–∏–≥—É
    wb.save()
    wb.close()

    # === –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ –ª–∏—Å—Ç–µ "—Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã" ===

    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–Ω–∏–≥—É —Å–Ω–æ–≤–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
    with xw.App(visible=False) as app:
        wb = app.books.open(new_file_path)
        sht = wb.sheets['—Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã']

        # –ó–∞–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã –≤ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É
        headers = ['ISIN', '–ê–∫—Ç–∏–≤', '–¢–∏–∫–µ—Ä', '–¢–∏–ø', '–î–∞—Ç–∞', '–¶–µ–Ω–∞']
        sht.range('A1').value = headers

        # –ü—Ä–∏–º–µ–Ω—è–µ–º –∂–∏—Ä–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º
        sht.range('A1:F1').api.Font.Bold = True

        # –ê–≤—Ç–æ—à–∏—Ä–∏–Ω–∞ –¥–ª—è –≤—Å–µ—Ö —Å—Ç–æ–ª–±—Ü–æ–≤ —Ç–∞–±–ª–∏—Ü—ã
        sht.range('A:F').autofit()

        # –í—ã–≤–æ–¥–∏–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ '—Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã' —Å–æ–∑–¥–∞–Ω–∞. –¢—Ä–µ–±—É–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è.")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –∫–Ω–∏–≥—É
        wb.save()
        wb.close()

import xlwings as xw
import os

import re

# === –ë–ª–æ–∫ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è ISIN —Å —Ç–∏–∫–µ—Ä–∞–º–∏ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ª–∏—Å—Ç–∞ '—Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã' ===

folder_path = r"F:\Python Projets\Report_N1\Data"

# üî∑ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ ISIN
def is_valid_isin(isin):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç ISIN –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É:
    - 12 —Å–∏–º–≤–æ–ª–æ–≤
    - –ü–µ—Ä–≤—ã–µ 2 ‚Äì –±—É–∫–≤—ã (–∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã)
    - –î–∞–ª–µ–µ 9 –±—É–∫–≤/—Ü–∏—Ñ—Ä
    - –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª ‚Äì —Ü–∏—Ñ—Ä–∞
    """
    pattern = r'^[A-Z]{2}[A-Z0-9]{9}[0-9]$'
    return bool(re.match(pattern, isin))

# –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è src_ —Ñ–∞–π–ª–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –æ—Ç—á–µ—Ç_ —Ñ–∞–π–ª–∞
src_file_name = new_file_name.replace('–æ—Ç—á–µ—Ç_', 'src_')
src_file_path = os.path.join(folder_path, src_file_name)

# –ü—É—Ç—å –∫ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫—É tickers
tickers_file_path = os.path.join(folder_path, 'tickers.xlsx')

with xw.App(visible=False) as app:
    # üî∑ –û—Ç–∫—Ä—ã–≤–∞–µ–º src_ —Ñ–∞–π–ª
    wb_src = app.books.open(src_file_path)
    ws_portfolio = wb_src.sheets['–ø–æ—Ä—Ç—Ñ–µ–ª—å']

    # üî∑ –ù–∞—Ö–æ–¥–∏–º –∫–æ–ª–æ–Ω–∫—É ISIN –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É
    header_row = ws_portfolio.range('1:1').value
    if 'ISIN' not in header_row:
        raise ValueError("‚ùå –í —Ñ–∞–π–ª–µ src_ –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—Ç–æ–ª–±–µ—Ü 'ISIN'.")

    isin_col_index = header_row.index('ISIN') + 1  # Excel columns are 1-based

    # üî∑ –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ ISIN –≤ —Å–ø–∏—Å–æ–∫, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–µ –ø–æ —Ñ–æ—Ä–º–∞—Ç—É
    last_row = ws_portfolio.range('A' + str(ws_portfolio.cells.last_cell.row)).end('up').row
    isin_values = ws_portfolio.range((2, isin_col_index), (last_row, isin_col_index)).value

    # –ü—Ä–∏–≤–æ–¥–∏–º –∫ —Å–ø–∏—Å–∫—É
    if isinstance(isin_values, str):
        isin_values = [isin_values]
    elif isinstance(isin_values, tuple):
        isin_values = list(isin_values)

    # üî∑ –§–∏–ª—å—Ç—Ä—É–µ–º ISIN: –∏—Å–∫–ª—é—á–∞–µ–º None, –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ –ø–æ —Ñ–æ—Ä–º–∞—Ç—É
    isins = []
    for idx, isin in enumerate(isin_values, start=2):
        if isin is None:
            continue
        isin_str = str(isin).strip().upper()
        if isin_str == "":
            continue
        if not is_valid_isin(isin_str):
            print(f"‚ö†Ô∏è –°—Ç—Ä–æ–∫–∞ {idx}: '{isin_str}' –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É ISIN. –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∞.")
            continue
        isins.append(isin_str)

    wb_src.close()

    # üî∑ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª tickers
    wb_tickers = app.books.open(tickers_file_path)
    ws_tickers = wb_tickers.sheets['–∞–∫—Ü–∏–∏_—Ñ–æ–Ω–¥—ã']

    # üî∑ –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å ISIN ‚Üí (–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ, –¢–∏–∫–µ—Ä, –¢–∏–ø)
    ticker_data = {}
    tickers_range = ws_tickers.range('A1').expand('table').value  # –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –∫–æ–º–ø–∞–∫—Ç–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞
    tickers_headers = tickers_range[0]

    isin_idx = tickers_headers.index('ISIN')
    name_idx = tickers_headers.index('–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ')
    ticker_idx = tickers_headers.index('—Ç–∏–∫–µ—Ä')
    type_idx = tickers_headers.index('—Ç–∏–ø')

    for row in tickers_range[1:]:
        ticker_data[row[isin_idx]] = (row[name_idx], row[ticker_idx], row[type_idx])

    wb_tickers.close()

    # üî∑ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –æ—Ç—á–µ—Ç_ –¥–ª—è –≤–Ω–µ—Å–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –ª–∏—Å—Ç '—Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã'
    wb_report = app.books.open(new_file_path)
    ws_prices = wb_report.sheets['—Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã']

    # üî∑ –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É —Ç–µ–∫—É—â–∏—Ö —Ü–µ–Ω
    row_idx = 2
    not_found = []

    for isin in isins:
        if isin in ticker_data:
            name, ticker, type_ = ticker_data[isin]
            ws_prices.range(f"A{row_idx}").value = isin
            ws_prices.range(f"B{row_idx}").value = name
            ws_prices.range(f"C{row_idx}").value = ticker
            ws_prices.range(f"D{row_idx}").value = type_
        else:
            not_found.append(isin)  # ISIN –±–µ–∑ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
        row_idx += 1

    # üî∑ –î–æ–±–∞–≤–ª—è–µ–º ISIN –±–µ–∑ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –≤–Ω–∏–∑—É —Ç–∞–±–ª–∏—Ü—ã
    for isin in not_found:
        ws_prices.range(f"A{row_idx}").value = isin
        ws_prices.range(f"B{row_idx}").value = "–ù–ï –Ω–∞–π–¥–µ–Ω–æ"
        row_idx += 1

    # üî∑ –ê–≤—Ç–æ—à–∏—Ä–∏–Ω–∞ —Å—Ç–æ–ª–±—Ü–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
    ws_prices.range('A:F').autofit()

    # üî∑ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –æ—Ç—á–µ—Ç_
    wb_report.save()
    wb_report.close()

# === –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ===

if not_found:
    print("‚ö†Ô∏è ISIN –±–µ–∑ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π:", ', '.join(str(isin) for isin in not_found))
else:
    print("‚úÖ –í—Å–µ ISIN –Ω–∞—à–ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è. ISIN –±–µ–∑ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã.")


# === –ë–ª–æ–∫ —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏—Å—Ç–∞ "–Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã–µ ISIN" ===

with xw.App(visible=False) as app:
    wb_report = app.books.open(new_file_path)

    # –£–¥–∞–ª—è–µ–º –ª–∏—Å—Ç, –µ—Å–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    try:
        ws_unrecognized = wb_report.sheets['–Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã–µ ISIN']
        ws_unrecognized.delete()
    except:
        pass  # –µ—Å–ª–∏ –ª–∏—Å—Ç–∞ –Ω–µ—Ç, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º

    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ª–∏—Å—Ç
    ws_unrecognized = wb_report.sheets.add(name='–Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã–µ ISIN', after=wb_report.sheets.count)

    # –û–∫—Ä–∞—à–∏–≤–∞–µ–º —è—Ä–ª—ã–∫ –≤ —è—Ä–∫–æ-–∫—Ä–∞—Å–Ω—ã–π
    ws_unrecognized.api.Tab.Color = 255  # RGB (255,0,0)

    # –ó–∞–≥–æ–ª–æ–≤–∫–∏
    ws_unrecognized.range("A1").value = "ISIN"
    ws_unrecognized.range("B1").value = "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"

    # –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–º–∏
    if not_found:
        row_idx = 2
        for isin in not_found:
            ws_unrecognized.range(f"A{row_idx}").value = isin
            ws_unrecognized.range(f"B{row_idx}").value = "–ù–µ—Ç –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–µ"
            row_idx += 1
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ª–∏—Å—Ç '–Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã–µ ISIN' —Å {len(not_found)} –∑–∞–ø–∏—Å—è–º–∏.")
    else:
        print("‚úÖ –í—Å–µ ISIN –Ω–∞–π–¥–µ–Ω—ã. –õ–∏—Å—Ç '–Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã–µ ISIN' –ø—É—Å—Ç.")

    # –ê–≤—Ç–æ—à–∏—Ä–∏–Ω–∞
    ws_unrecognized.range("A:B").autofit()

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –∫–Ω–∏–≥—É
    wb_report.save()
    wb_report.close()


# === –ë–ª–æ–∫ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω –ø–æ —Ç–∏–∫–µ—Ä–∞–º —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–∞—Ç—ã –∏ —É–¥–∞–ª–µ–Ω–∏–µ–º –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫ ===

import yfinance as yf
import datetime
import holidays
import time

# === –ë–ª–æ–∫ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω –ø–æ —Ç–∏–∫–µ—Ä–∞–º —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–∞—Ç—ã –∏ —É–¥–∞–ª–µ–Ω–∏–µ–º –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫ ===

us_holidays = holidays.US()

# üî∑ –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–∞—Ç–∞ —Ä–∞–±–æ—á–∏–º –¥–Ω–µ–º –≤ –°–®–ê
def is_valid_us_trading_day(date_obj):
    return date_obj.weekday() < 5 and date_obj not in us_holidays

# üî∑ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞—Ç—É —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
while True:
    date_input = input("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ dd/mm/yyyy: ")
    try:
        query_date = datetime.datetime.strptime(date_input, "%d/%m/%Y").date()
        if not is_valid_us_trading_day(query_date):
            print("‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–Ω–∞—è –¥–∞—Ç–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –≤—ã—Ö–æ–¥–Ω–æ–π –∏–ª–∏ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–∞–∑–¥–Ω–∏–∫ –°–®–ê. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            continue
        break
    except ValueError:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

# üî∑ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –æ—Ç—á–µ—Ç_ –¥–ª—è –≤–Ω–µ—Å–µ–Ω–∏—è —Ü–µ–Ω
with xw.App(visible=False) as app:
    wb_report = app.books.open(new_file_path)
    ws_prices = wb_report.sheets['—Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã']

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É
    last_row = ws_prices.range('A' + str(ws_prices.cells.last_cell.row)).end('up').row

    # üî∑ –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ —Ç–∞–±–ª–∏—Ü—ã —Ç–µ–∫—É—â–∏—Ö —Ü–µ–Ω (—Å–Ω–∏–∑—É –≤–≤–µ—Ä—Ö)
    for row in range(last_row, 1, -1):  # –æ—Ç last_row –¥–æ 2
        ticker = ws_prices.range(f"C{row}").value  # –∫–æ–ª–æ–Ω–∫–∞ C - —Ç–∏–∫–µ—Ä

        if not ticker or str(ticker).strip() == "":
            print(f"‚ö†Ô∏è –°—Ç—Ä–æ–∫–∞ {row}: —Ç–∏–∫–µ—Ä –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Å—Ç—Ä–æ–∫–∞ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∞.")
            ws_prices.api.Rows(row).Delete()
            continue

        success = False
        attempts = 0
        price = None

        # üî∑ –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É –¥–æ 3 —Ä–∞–∑
        while attempts < 3 and not success:
            try:
                df = yf.download(ticker, start=query_date, end=query_date + datetime.timedelta(days=1), progress=False)
                if not df.empty:
                    close_price = float(df['Close'].iloc[0])

                    # üî∑ –í—Å—Ç–∞–≤–ª—è–µ–º –¥–∞—Ç—É –≤ –∫–æ–ª–æ–Ω–∫—É E
                    ws_prices.range(f"E{row}").value = query_date.strftime("%d.%m.%Y")

                    # üî∑ –í—Å—Ç–∞–≤–ª—è–µ–º —Ü–µ–Ω—É –∫–∞–∫ —á–∏—Å–ª–æ
                    ws_prices.range(f"F{row}").value = close_price

                    # üî∑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º NumberFormat Excel
                    ws_prices.range(f"F{row}").api.NumberFormat = '# ##0,000'

                    print(f"‚úÖ {ticker}: —Ü–µ–Ω–∞ –ø–æ–ª—É—á–µ–Ω–∞ {close_price:.3f}")
                    success = True
                else:
                    attempts += 1
                    print(f"‚ö†Ô∏è {ticker}: —Ü–µ–Ω–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω–∞, –ø–æ–ø—ã—Ç–∫–∞ {attempts}/3")
                    time.sleep(1)
            except Exception as e:
                attempts += 1
                print(f"‚ùå {ticker}: –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ü–µ–Ω—ã ({e}), –ø–æ–ø—ã—Ç–∫–∞ {attempts}/3")
                time.sleep(1)

        # üî∑ –ï—Å–ª–∏ –ø–æ—Å–ª–µ 3 –ø–æ–ø—ã—Ç–æ–∫ —Ü–µ–Ω–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω–∞ ‚Äì –∑–∞–ø–∏—Å—ã–≤–∞–µ–º 'NA'
        if not success:
            ws_prices.range(f"E{row}").value = query_date.strftime("%d.%m.%Y")
            ws_prices.range(f"F{row}").value = "NA"
            print(f"‚ùå {ticker}: —Ü–µ–Ω–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω–∞ –ø–æ—Å–ª–µ 3 –ø–æ–ø—ã—Ç–æ–∫, –∑–∞–ø–∏—Å–∞–Ω–æ 'NA'.")

    # üî∑ –ê–≤—Ç–æ—à–∏—Ä–∏–Ω–∞ —Å—Ç–æ–ª–±—Ü–æ–≤ E –∏ F –ø–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
    ws_prices.range('E:F').autofit()

    # üî∑ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –æ—Ç—á–µ—Ç_
    wb_report.save()
    wb_report.close()

print("‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–µ–Ω –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")


# === –ë–ª–æ–∫ –ø–æ–∏—Å–∫–∞ –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö ISIN –≤ "—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ_–ø—Ä–æ–¥—É–∫—Ç—ã" –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ ===

import xlwings as xw

folder_path = r"F:\Python Projets\Report_N1\Data"
tickers_file_path = os.path.join(folder_path, 'tickers.xlsx')
report_file_path = new_file_path  # –ø—É—Ç—å –∫ —Ç–≤–æ–µ–º—É –æ—Ç—á–µ—Ç–Ω–æ–º—É —Ñ–∞–π–ª—É

with xw.App(visible=False) as app:
    # üî∑ –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ—Ç—á–µ—Ç–Ω—ã–π —Ñ–∞–π–ª
    wb_report = app.books.open(report_file_path)
    ws_unrec = wb_report.sheets['–Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã–µ ISIN']

    # –°–æ–±–∏—Ä–∞–µ–º ISIN —Å –∏—Ö —Å—Ç—Ä–æ–∫–∞–º–∏
    isins_range = ws_unrec.range('A2').expand('down')
    isins = isins_range.value

    # === üî∑ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö ISIN ===
    if isins is None:
        print("‚úÖ –ù–µ–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö ISIN –Ω–µ—Ç. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.")
    else:
        if isinstance(isins, str):
            isins = [isins]

        # üî∑ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª tickers
        wb_tickers = app.books.open(tickers_file_path)
        ws_struct = wb_tickers.sheets['—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ_–ø—Ä–æ–¥—É–∫—Ç—ã']

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å—é —Ç–∞–±–ª–∏—Ü—É –≤ –ø–∞–º—è—Ç—å
        struct_table = ws_struct.range('A1').expand('table').value
        headers = struct_table[0]

        isin_idx = headers.index('ISIN')
        issuer_idx = headers.index('—ç–º–∏—Ç–µ–Ω—Ç')

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å ISIN ‚Üí —ç–º–∏—Ç–µ–Ω—Ç
        struct_dict = {row[isin_idx]: row[issuer_idx] for row in struct_table[1:]}

        # üî∑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π ISIN –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ –ª–∏—Å—Ç–µ
        found_count = 0
        not_found_count = 0

        for i, isin in enumerate(isins, start=2):  # –Ω–∞—á–∏–Ω–∞–µ–º —Å 2-–π —Å—Ç—Ä–æ–∫–∏
            issuer = struct_dict.get(isin)
            if issuer:
                print(f"‚úÖ –ù–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã–π ISIN {isin} —è–≤–ª—è–µ—Ç—Å—è –°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–º –ø—Ä–æ–¥—É–∫—Ç–æ–º. –≠–º–∏—Ç–µ–Ω—Ç: {issuer}")
                ws_unrec.range(f"B{i}").value = "–°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç"
                found_count += 1
            else:
                not_found_count += 1

        wb_tickers.close()

        # === –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ===
        print(f"\nüîé –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤:")
        print(f"‚úîÔ∏è –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤: {found_count}")
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø–æ–∑–Ω–∞—Ç—å: {not_found_count}")

    # üî∑ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –æ—Ç—á–µ—Ç–Ω—É—é –∫–Ω–∏–≥—É
    wb_report.save()
    wb_report.close()

print(f"‚úÖ –§–∞–π–ª '{report_file_path}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω.")



# === –ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ '–Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã–µ ISIN' ===

with xw.App(visible=False) as app:
    wb = app.books.open(report_file_path)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ª–∏—Å—Ç '–Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã–µ ISIN'
    if '–Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã–µ ISIN' in [sheet.name for sheet in wb.sheets]:
        ws_unrec = wb.sheets['–Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã–µ ISIN']

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É —Å –¥–∞–Ω–Ω—ã–º–∏
        last_row = ws_unrec.range('A' + str(ws_unrec.cells.last_cell.row)).end('up').row

        # üî∑ –î–µ–ª–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∂–∏—Ä–Ω—ã–º
        ws_unrec.range("A1:B1").api.Font.Bold = True

        # üî∑ –ü—Ä–∏–º–µ–Ω—è–µ–º –∞–≤—Ç–æ—à–∏—Ä–∏–Ω—É –∫–æ –≤—Å–µ–º —Å—Ç–æ–ª–±—Ü–∞–º —Å –¥–∞–Ω–Ω—ã–º–∏
        ws_unrec.range(f"A1:B{last_row}").columns.autofit()

        print("‚úÖ –õ–∏—Å—Ç '–Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã–µ ISIN' –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω (–∑–∞–≥–æ–ª–æ–≤–æ–∫ –∂–∏—Ä–Ω—ã–π, –∞–≤—Ç–æ—à–∏—Ä–∏–Ω–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞).")

    wb.save()
    wb.close()

import xlwings as xw

# === –ë–ª–æ–∫ —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏—Å—Ç–∞ –∞–∫—Ü–∏–∏_etf ===

with xw.App(visible=False) as app:
    wb = app.books.open(report_file_path)

    # –£–¥–∞–ª—è–µ–º –ª–∏—Å—Ç '–∞–∫—Ü–∏–∏_etf', –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if '–∞–∫—Ü–∏–∏_etf' in [sheet.name for sheet in wb.sheets]:
        wb.sheets['–∞–∫—Ü–∏–∏_etf'].delete()

    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ª–∏—Å—Ç '–∞–∫—Ü–∏–∏_etf'
    ws_ae = wb.sheets.add('–∞–∫—Ü–∏–∏_etf', after=wb.sheets[-1])

    # –û–∫—Ä–∞—à–∏–≤–∞–µ–º —è—Ä–ª—ã–∫ –≤ #65bd93
    ws_ae.api.Tab.Color = 0x65bd93

    # üî∑ –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ —Å—Ç—Ä–æ–∫–µ 1
    headers = ["N", "–ê–∫—Ç–∏–≤", "–¢–∏–∫–µ—Ä", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", "–¶–µ–Ω–∞ –≤—Ö–æ–¥–∞", "–û–±—ä–µ–º –≤—Ö–æ–¥–∞",
               "–¶–µ–Ω–∞ —Ç–µ–∫—É—â–∞—è", "–û–±—ä–µ–º —Ç–µ–∫—É—â–∏–π", "–†–∞–∑–Ω–∏—Ü–∞ USD", "–†–∞–∑–Ω–∏—Ü–∞ %"]
    ws_ae.range("A1:J1").value = headers

    # üî∑ –ü—Ä–∏–º–µ–Ω—è–µ–º –∂–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç, –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ —Ü–µ–Ω—Ç—Ä—É –∏ —Ü–≤–µ—Ç –∑–∞–ª–∏–≤–∫–∏
    header_range = ws_ae.range("A1:J1")
    header_range.api.Font.Bold = True
    header_range.api.HorizontalAlignment = -4108  # xlCenter
    header_range.api.VerticalAlignment = -4108    # xlCenter
    header_range.color = '#d5d3af'

    # üî∑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã—Å–æ—Ç—É —Å—Ç—Ä–æ–∫–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞ +5 –ø—É–Ω–∫—Ç–æ–≤
    current_height = ws_ae.range("1:1").row_height
    ws_ae.range("1:1").row_height = current_height + 5

    # üî∑ –ê–≤—Ç–æ—à–∏—Ä–∏–Ω–∞ + 4 pt –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —á—Ç–µ–Ω–∏—è
    ws_ae.range("A:J").columns.autofit()
    for col in ws_ae.range("A1:J1").columns:
        current_width = col.column_width
        col.column_width = current_width + 4

    # üî∑ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –∫–Ω–∏–≥—É
    wb.save()
    wb.close()

print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ '–∞–∫—Ü–∏–∏_etf' —Å–æ–∑–¥–∞–Ω–∞.")


# === –ë–ª–æ–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –∞–∫—Ü–∏–∏_etf ===
#=====================================================

import xlwings as xw
import os

# === –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —à–∏—Ä–∏–Ω—ã —Å—Ç–æ–ª–±—Ü–∞ ===
def adjust_column_width(ws, col_letter, extra_pts=3):
    ws.range(f"{col_letter}:{col_letter}").columns.autofit()
    current_width = ws.range(f"{col_letter}1").column_width
    ws.range(f"{col_letter}:{col_letter}").column_width = current_width + extra_pts

# === –ë–ª–æ–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –∞–∫—Ü–∏–∏_etf (—Å—Ç–æ–ª–±—Ü—ã A, B, C, D, E, F, G) ===

with xw.App(visible=False) as app:
    wb = app.books.open(report_file_path)
    ws_ae = wb.sheets['–∞–∫—Ü–∏–∏_etf']
    ws_prices = wb.sheets['—Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã']

    # üî∑ –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ '—Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã'
    last_row_prices = ws_prices.range('A' + str(ws_prices.cells.last_cell.row)).end('up').row

    # ===================== üî∑ –ë–ª–æ–∫ —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª–æ–≤–∞—Ä—è ISIN ‚Üí –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ ISIN ‚Üí –ë–∞–ª–∞–Ω—Å. —Ü–µ–Ω–∞ –∏–∑ src_ —Ñ–∞–π–ª–∞ =====================
    src_file_name = new_file_name.replace('–æ—Ç—á–µ—Ç_', 'src_')
    src_file_path = os.path.join(folder_path, src_file_name)
    wb_src = app.books.open(src_file_path)
    ws_portfolio = wb_src.sheets['–ø–æ—Ä—Ç—Ñ–µ–ª—å']

    header_row = ws_portfolio.range('1:1').value
    isin_col_index = header_row.index('ISIN') + 1
    qty_col_index = 5  # –∫–æ–ª–æ–Ω–∫–∞ E (–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ)
    price_col_index = 8  # –∫–æ–ª–æ–Ω–∫–∞ H (–ë–∞–ª–∞–Ω—Å. —Ü–µ–Ω–∞)

    qty_dict = {}
    price_dict = {}

    last_row_src = ws_portfolio.range('A' + str(ws_portfolio.cells.last_cell.row)).end('up').row

    for i in range(2, last_row_src + 1):
        isin = ws_portfolio.range((i, isin_col_index)).value
        qty = ws_portfolio.range((i, qty_col_index)).value
        price = ws_portfolio.range((i, price_col_index)).value
        if isin:
            qty_dict[isin] = qty
            price_dict[isin] = price

    wb_src.close()
    # ==========================================================================================

    # ===================== üî∑ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ A (–Ω—É–º–µ—Ä–∞—Ü–∏—è) =====================
    for i in range(2, last_row_prices + 1):
        cell_num = ws_ae.range(f"A{i}")
        cell_num.value = int(i - 1)
        cell_num.api.NumberFormat = '# ##0'
        cell_num.api.HorizontalAlignment = -4108  # xlCenter
        cell_num.api.VerticalAlignment = -4108    # xlCenter
    adjust_column_width(ws_ae, 'A', extra_pts=3)
    # ==========================================================================

    # ===================== üî∑ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ B (–∞–∫—Ç–∏–≤—ã) =====================
    for i in range(2, last_row_prices + 1):
        active_name = ws_prices.range(f"B{i}").value
        cell_B = ws_ae.range(f"B{i}")
        cell_B.value = active_name
        cell_B.api.HorizontalAlignment = -4131  # xlLeft
        cell_B.api.VerticalAlignment = -4108    # xlCenter
    adjust_column_width(ws_ae, 'B', extra_pts=3)
    # ==========================================================================

    # ===================== üî∑ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ C (—Ç–∏–∫–µ—Ä—ã) =====================
    for i in range(2, last_row_prices + 1):
        ticker = ws_prices.range(f"C{i}").value
        cell_C = ws_ae.range(f"C{i}")
        cell_C.value = ticker
        cell_C.api.HorizontalAlignment = -4108  # xlCenter
        cell_C.api.VerticalAlignment = -4108    # xlCenter
    adjust_column_width(ws_ae, 'C', extra_pts=3)
    # ==========================================================================

    # ===================== üî∑ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ D (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ) =====================
    for i in range(2, last_row_prices + 1):
        isin = ws_prices.range(f"A{i}").value
        qty = qty_dict.get(isin, 0)
        cell_D = ws_ae.range(f"D{i}")
        cell_D.value = int(qty) if isinstance(qty, (int, float)) else 0
        cell_D.api.NumberFormat = '# ##0'
        cell_D.api.HorizontalAlignment = -4152  # xlRight
        cell_D.api.VerticalAlignment = -4108    # xlCenter
    adjust_column_width(ws_ae, 'D', extra_pts=3)
    # ==========================================================================

    # ===================== üî∑ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ E (–¶–µ–Ω–∞ –≤—Ö–æ–¥–∞) –∏–∑ src_ (–ë–∞–ª–∞–Ω—Å. —Ü–µ–Ω–∞) =====================
    for i in range(2, last_row_prices + 1):
        isin = ws_prices.range(f"A{i}").value
        price = price_dict.get(isin, 0)
        cell_E = ws_ae.range(f"E{i}")
        if isinstance(price, (int, float)):
            cell_E.value = price
            cell_E.api.NumberFormat = '# ##0,000'
        else:
            cell_E.value = 0
            cell_E.api.NumberFormat = '# ##0,000'
        cell_E.api.HorizontalAlignment = -4152  # xlRight
        cell_E.api.VerticalAlignment = -4108    # xlCenter
    adjust_column_width(ws_ae, 'E', extra_pts=3)
    print("‚úÖ –°—Ç–æ–ª–±–µ—Ü '–¶–µ–Ω–∞ –≤—Ö–æ–¥–∞' –∑–∞–ø–æ–ª–Ω–µ–Ω.")
    # ==========================================================================

    # ===================== üî∑ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ F (–û–±—ä–µ–º –≤—Ö–æ–¥–∞ = –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ * –¶–µ–Ω–∞ –≤—Ö–æ–¥–∞) =====================
    for i in range(2, last_row_prices + 1):
        qty = ws_ae.range(f"D{i}").value
        price_in = ws_ae.range(f"E{i}").value
        volume_in = qty * price_in if isinstance(qty, (int, float)) and isinstance(price_in, (int, float)) else 0
        cell_F = ws_ae.range(f"F{i}")
        cell_F.value = volume_in
        cell_F.api.NumberFormat = '# ##0,00'
        cell_F.api.HorizontalAlignment = -4152  # xlRight
        cell_F.api.VerticalAlignment = -4108    # xlCenter
    adjust_column_width(ws_ae, 'F', extra_pts=3)
    print("‚úÖ –°—Ç–æ–ª–±–µ—Ü '–û–±—ä–µ–º –≤—Ö–æ–¥–∞' –∑–∞–ø–æ–ª–Ω–µ–Ω.")
    # ==========================================================================

    # ===================== üî∑ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ G (–¶–µ–Ω–∞ —Ç–µ–∫—É—â–∞—è) –∏–∑ –ª–∏—Å—Ç–∞ '—Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã' =====================
    for i in range(2, last_row_prices + 1):
        price_current = ws_prices.range(f"F{i}").value  # –∫–æ–ª–æ–Ω–∫–∞ F –Ω–∞ –ª–∏—Å—Ç–µ —Ç–µ–∫—É—â–∏–µ_—Ü–µ–Ω—ã
        cell_G = ws_ae.range(f"G{i}")
        if isinstance(price_current, (int, float)):
            cell_G.value = price_current
            cell_G.api.NumberFormat = '# ##0,000'
        else:
            cell_G.value = 0
            cell_G.api.NumberFormat = '# ##0,000'
        cell_G.api.HorizontalAlignment = -4152  # xlRight
        cell_G.api.VerticalAlignment = -4108    # xlCenter
    adjust_column_width(ws_ae, 'G', extra_pts=3)
    print("‚úÖ –°—Ç–æ–ª–±–µ—Ü '–¶–µ–Ω–∞ —Ç–µ–∫—É—â–∞—è' –∑–∞–ø–æ–ª–Ω–µ–Ω.")
    # ==========================================================================

    # ===================== üî∑ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ H (–û–±—ä–µ–º —Ç–µ–∫—É—â–∏–π = –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ * –¶–µ–Ω–∞ —Ç–µ–∫—É—â–∞—è) =====================
    for i in range(2, last_row_prices + 1):
        qty = ws_ae.range(f"D{i}").value
        current_price = ws_ae.range(f"G{i}").value
        cell_H = ws_ae.range(f"H{i}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±–∞ –∑–Ω–∞—á–µ–Ω–∏—è —è–≤–ª—è—é—Ç—Å—è —á–∏—Å–ª–∞–º–∏
        if isinstance(qty, (int, float)) and isinstance(current_price, (int, float)):
            volume_current = qty * current_price
        else:
            volume_current = 0

        cell_H.value = volume_current

        # –§–æ—Ä–º–∞—Ç —á–∏—Å–ª–∞: —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ —Ä–∞–∑—Ä—è–¥—ã, –¥–≤–∞ –∑–Ω–∞–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π
        cell_H.api.NumberFormat = '# ##0,00'
        cell_H.api.HorizontalAlignment = -4152  # xlRight
        cell_H.api.VerticalAlignment = -4108    # xlCenter

    adjust_column_width(ws_ae, 'H', extra_pts=3)
    print("‚úÖ –°—Ç–æ–ª–±–µ—Ü '–û–±—ä–µ–º —Ç–µ–∫—É—â–∏–π' (H) —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω.")
    # ==========================================================================

    # ===================== üî∑ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ I (–†–∞–∑–Ω–∏—Ü–∞ USD = –û–±—ä–µ–º —Ç–µ–∫—É—â–∏–π - –û–±—ä–µ–º –≤—Ö–æ–¥–∞) =====================
    for i in range(2, last_row_prices + 1):
        volume_current = ws_ae.range(f"H{i}").value
        volume_entry = ws_ae.range(f"F{i}").value
        cell_I = ws_ae.range(f"I{i}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±–∞ –∑–Ω–∞—á–µ–Ω–∏—è —è–≤–ª—è—é—Ç—Å—è —á–∏—Å–ª–∞–º–∏
        if isinstance(volume_current, (int, float)) and isinstance(volume_entry, (int, float)):
            difference_usd = volume_current - volume_entry
            cell_I.value = difference_usd
            # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ—Ä–º–∞—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äì —á–∏—Å–ª–æ
            cell_I.api.NumberFormat = '# ##0,00'
        else:
            cell_I.value = 0
            cell_I.api.NumberFormat = '# ##0,00'

        cell_I.api.HorizontalAlignment = -4152  # xlRight
        cell_I.api.VerticalAlignment = -4108    # xlCenter

    adjust_column_width(ws_ae, 'I', extra_pts=3)
    print("‚úÖ –°—Ç–æ–ª–±–µ—Ü '–†–∞–∑–Ω–∏—Ü–∞ USD' (I) —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω.")
    # ==========================================================================

    # ===================== üî∑ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ J (–†–∞–∑–Ω–∏—Ü–∞ % = –†–∞–∑–Ω–∏—Ü–∞ USD / –û–±—ä–µ–º –≤—Ö–æ–¥–∞) =====================
    for i in range(2, last_row_prices + 1):
        diff_usd = ws_ae.range(f"I{i}").value
        volume_entry = ws_ae.range(f"F{i}").value
        cell_J = ws_ae.range(f"J{i}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±–∞ –∑–Ω–∞—á–µ–Ω–∏—è —è–≤–ª—è—é—Ç—Å—è —á–∏—Å–ª–∞–º–∏ –∏ –æ–±—ä–µ–º –≤—Ö–æ–¥–∞ –Ω–µ —Ä–∞–≤–µ–Ω –Ω—É–ª—é
        if isinstance(diff_usd, (int, float)) and isinstance(volume_entry, (int, float)) and volume_entry != 0:
            diff_percent = diff_usd / volume_entry
            cell_J.value = diff_percent
            # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ—Ä–º–∞—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–∞: –¥–≤–∞ –∑–Ω–∞–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π –∏ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Ä–∞–∑—Ä—è–¥–æ–≤
            cell_J.api.NumberFormat = '0,00%'
        else:
            cell_J.value = 0
            cell_J.api.NumberFormat = '0,00%'

        cell_J.api.HorizontalAlignment = -4152  # xlRight
        cell_J.api.VerticalAlignment = -4108    # xlCenter

    adjust_column_width(ws_ae, 'J', extra_pts=3)
    print("‚úÖ –°—Ç–æ–ª–±–µ—Ü '–†–∞–∑–Ω–∏—Ü–∞ %' (J) —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω.")
    # ==========================================================================

    # ===================== üî∑ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ –∞–∫—Ü–∏–∏_etf =====================
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–ø–∏—Å–∏
    total_row = last_row_prices + 1

    # –í–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç "–ò–¢–û–ì–û" –≤ —Å—Ç–æ–ª–±–µ—Ü B
    cell_total_label = ws_ae.range(f"B{total_row}")
    cell_total_label.value = "–ò–¢–û–ì–û"
    cell_total_label.api.Font.Bold = True
    cell_total_label.api.HorizontalAlignment = -4131  # xlLeft
    cell_total_label.api.VerticalAlignment = -4108    # xlCenter

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ñ–æ—Ä–º—É–ª—ã –¥–ª—è —Å—É–º–º—ã –≤ —Å—Ç–æ–ª–±—Ü–∞—Ö F, H, I
    columns_sum = {'F': '–û–±—ä–µ–º –≤—Ö–æ–¥–∞', 'H': '–û–±—ä–µ–º —Ç–µ–∫—É—â–∏–π', 'I': '–†–∞–∑–Ω–∏—Ü–∞ USD'}
    for col, name in columns_sum.items():
        cell = ws_ae.range(f"{col}{total_row}")
        formula = f"=SUM({col}2:{col}{last_row_prices})"
        cell.api.Formula = formula

        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ—Ä–º–∞—Ç '# ##0,00' –∏ –∂–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç
        cell.api.NumberFormat = '# ##0,00'
        cell.api.Font.Bold = True
        cell.api.HorizontalAlignment = -4152  # xlRight
        cell.api.VerticalAlignment = -4108    # xlCenter

    # üî∑ –†–∞—Å—á–µ—Ç –†–∞–∑–Ω–∏—Ü–∞ % –≤ —Å—Ç–æ–ª–±—Ü–µ J –∫–∞–∫ –†–∞–∑–Ω–∏—Ü–∞ USD / –û–±—ä–µ–º –≤—Ö–æ–¥–∞
    cell_J = ws_ae.range(f"J{total_row}")
    formula_J = f"=I{total_row}/F{total_row}"
    cell_J.api.Formula = formula_J

    # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ—Ä–º–∞—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–∞ —Å –¥–≤—É–º—è –∑–Ω–∞–∫–∞–º–∏ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π –∏ –∂–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç
    cell_J.api.NumberFormat = '0,00%'
    cell_J.api.Font.Bold = True
    cell_J.api.HorizontalAlignment = -4152  # xlRight
    cell_J.api.VerticalAlignment = -4108    # xlCenter

    print("‚úÖ –ò—Ç–æ–≥–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –∞–∫—Ü–∏—è–º –∏ ETF —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω—ã.")
    # ==========================================================================

    # ===================== üî∑ –¶–≤–µ—Ç–æ–≤–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–∞–±–ª–∏—Ü—ã –∞–∫—Ü–∏–∏_etf (—Å—Ç–æ–ª–±—Ü—ã I –∏ J) =====================
    from xlwings.utils import rgb_to_int

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É —Å –¥–∞–Ω–Ω—ã–º–∏ –∏ —Å—Ç—Ä–æ–∫—É –∏—Ç–æ–≥–æ–≤
    total_row = last_row_prices + 1

    # –°–ø–∏—Å–æ–∫ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏—è
    color_columns = ['I', 'J']

    for col in color_columns:
        for i in range(2, total_row + 1):
            cell = ws_ae.range(f"{col}{i}")
            value = cell.value

            # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ —á–∏—Å–ª—É, –µ—Å–ª–∏ —Ñ–æ—Ä–º—É–ª–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            try:
                val = float(value)
            except (TypeError, ValueError):
                val = None

            if val is not None:
                if val > 0:
                    # –°–≤–µ—Ç–ª–æ-–∑–µ–ª–µ–Ω—ã–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, RGB 198, 239, 206)
                    cell.color = (198, 239, 206)
                elif val < 0:
                    # –°–≤–µ—Ç–ª–æ-–∫—Ä–∞—Å–Ω—ã–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, RGB 255, 199, 206)
                    cell.color = (255, 199, 206)
                else:
                    # –°–≤–µ—Ç–ª–æ-–∂–µ–ª—Ç—ã–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, RGB 255, 235, 156)
                    cell.color = (255, 235, 156)
            else:
                # –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º, –æ—Å—Ç–∞–≤–ª—è–µ–º –±–µ–∑ –∑–∞–ª–∏–≤–∫–∏
                pass

    print("‚úÖ –¶–≤–µ—Ç–æ–≤–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–∞–±–ª–∏—Ü—ã –∞–∫—Ü–∏–∏_etf –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
    # ==========================================================================




    # üî∑ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –∫–Ω–∏–≥—É
    wb.save()
    wb.close()

print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ '–∞–∫—Ü–∏–∏_etf' –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –∏–º–µ—é—â–∏–º–∏—Å—è –¥–∞–Ω–Ω—ã–º–∏.")
